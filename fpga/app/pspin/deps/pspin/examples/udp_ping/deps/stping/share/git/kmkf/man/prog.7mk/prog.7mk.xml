<?xml version="1.0" encoding="ISO-8859-1"?>

<!--
	Copyright 2014-2017 Katherine Flavel

	See LICENCE for the full copyright terms.
-->

<!DOCTYPE refentry SYSTEM "minidocbook.dtd" [
	<!ENTITY efence  "<ulink url='https://elinux.org/Electric_Fence'>Electric Fence</ulink>">
]>
<refentry>
	<refentryinfo>
		<title>&kmkf; Manual</title>
		<productname>&kmkf;</productname>

		<authorgroup>
			<author>
				<firstname>Katherine</firstname>
				<surname>Flavel</surname>
			</author>
		</authorgroup>
	</refentryinfo>

	<refmeta>
		<refentrytitle>prog</refentrytitle>
		<manvolnum>7mk</manvolnum>
	</refmeta>

	<refnamediv>
		<refclass>mk</refclass>
		<refname>prog</refname>
		<refpurpose>Link objects into an executable program</refpurpose>
	</refnamediv>

	<refsynopsisdiv>
		<synopsis>.include &lt;prog.mk&gt;</synopsis>
	</refsynopsisdiv>

	<refsection>
		<title>Description</title>

		<para>Link object files to produce an executable.</para>
	</refsection>

	<refsection>
		<title>Options</title>

		<variablelist>
			<varlistentry>
				<term><code>ASAN</code>/<code>MSAN</code>/<code>UBSAN</code></term>

				<listitem>
					<para>If the compiler supports it, build with
						Address, Memory, or Undefined Behaviour Sanitizers.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><code>DEBUG</code></term>

				<listitem>
					<para>Adjusts the build to add and preserve debugging
						information. Implies <code>NOSTRIP</code>.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><code>EFENCE</code></term>

				<listitem>
					<para>Link with the &efence; memory allocation debugger.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term><code>NOSTRIP</code></term>

				<listitem>
					<para>Don&rsquo;t strip symbols.
						Symbols are stripped by default.</para>
				</listitem>
			</varlistentry>
		</variablelist>
	</refsection>

	<refsection>
		<title>Input</title>

<synopsis>CC      ?= <replaceable>...</replaceable> <remark># see &obj.7mk;</remark>
STRIP   ?= strip
LFLAGS  ?=

BUILD    = <replaceable>dir</replaceable>
PROG    += <replaceable>name</replaceable>

<replaceable>obj</replaceable>.o ...:</synopsis>
	</refsection>

	<refsection>
		<title>Output</title>

<synopsis>CLEAN += <replaceable>...</replaceable>
DIR   += <replaceable>...</replaceable>

${BUILD}/bin/<replaceable>name</replaceable>: <replaceable>obj</replaceable>.o ...
prog:: ${BUILD}/bin/<replaceable>name</replaceable></synopsis>
	</refsection>

	<refsection>
		<title>See Also</title>

		<para>&kmkf.7mk;, &obj.7mk;, &clean.7mk;, &install.7mk;, &ar;.</para>
	</refsection>
</refentry>

